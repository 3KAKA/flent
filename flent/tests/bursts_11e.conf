## -*- mode: python; coding: utf-8 -*-

## rrul test specification

AGGREGATOR='timeseries'
TOTAL_LENGTH=LENGTH
DESCRIPTION="802.11e Latency measurements under intermittent UDP bursts"
DEFAULTS={'PLOT': "ping"}

DATA_SETS = o([
    ('Ping (ms) UDP EF',
     {'command': find_netperf("UDP_RR", LENGTH, HOST, marking="EF,EF"),
      'data_transform': 'rr_to_ms',
      'units': 'ms',
      'runner': 'netperf_demo',}),
    ('Ping (ms) UDP BK',
     {'command': find_netperf("UDP_RR", LENGTH, HOST, marking="CS1,CS1"),
      'data_transform': 'rr_to_ms',
      'units': 'ms',
      'runner': 'netperf_demo',}),
    ('Ping (ms) UDP VI',
     {'command': find_netperf("UDP_RR", LENGTH, HOST, marking="CS5,CS5"),
      'data_transform': 'rr_to_ms',
      'units': 'ms',
      'runner': 'netperf_demo',}),
    ('Ping (ms) UDP BE',
     {'command': find_netperf("UDP_RR", LENGTH, HOST, marking="CS0,CS0"),
      'data_transform': 'rr_to_ms',
      'units': 'ms',
      'runner': 'netperf_demo',}),
    ('Ping (ms) avg',
     {'apply_to': [glob("Ping (ms)*")],
       'units': 'ms',
       'runner': 'average',}),
    ])

TEST_PARAMETERS['burst-ports'] = int(TEST_PARAMETERS.get('burst-ports', 1000))
TEST_PARAMETERS['burst-length'] = int(TEST_PARAMETERS.get('burst-length', 5))
TEST_PARAMETERS['burst-psize'] = int(TEST_PARAMETERS.get('burst-psize', 500))
TEST_PARAMETERS['burst-tos'] = parse_int(TEST_PARAMETERS.get('burst-tos', 0))

TOS = ("-t %s" % TEST_PARAMETERS['burst-tos']) if TEST_PARAMETERS['burst-tos'] else ""

BURST_LENGTH = TEST_PARAMETERS['burst-length']

for i in range(LENGTH//(DELAY+BURST_LENGTH)):
    DATA_SETS['Burst %d' % i] = {
        'command': "traffic-gen -f %s -p 0 -l %d -s %s -dD %s %s" % (
            TEST_PARAMETERS['burst-ports'],
            TEST_PARAMETERS['burst-length'],
            TEST_PARAMETERS['burst-psize'],
            TOS,
            HOST),
        'delay': DELAY*(i+1)+BURST_LENGTH*i,
        'units': 'N/A',
        'runner': 'silent_process',}

PLOTS = o([
    ('ping',
     {'description': 'Ping plot',
      'type': 'timeseries',
      'legend_title': 'Ping (ms)',
      'axis_labels': ['Latency (ms)'],
      'series': [
                 {'data': 'Ping (ms) UDP BK',
                  'label': 'UDP BK'},
                 {'data': 'Ping (ms) UDP BE',
                  'label': 'UDP BE'},
                 {'data': 'Ping (ms) UDP VI',
                  'label': 'UDP VI'},
		 {'data': 'Ping (ms) UDP EF',
                  'label': 'UDP EF'},
                 {'data': 'Ping (ms) avg',
                  'label': 'Avg',
                  'smoothing': 10,
                  'color': 'black',
                  'linewidth': 2}]}),

    ('ping_cdf',
     {'description': 'Ping CDF plot',
      'type': 'cdf',
      'axis_labels': ['Latency (ms)'],
      'parent': 'ping',
      'cutoff': (DELAY,DELAY)}),

    ('box_ping',
     {'description': 'Ping box plot',
      'parent': 'ping',
      'type': 'box'}),
    ])
